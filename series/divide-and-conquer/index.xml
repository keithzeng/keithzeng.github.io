<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Divide and Conquer on k317h</title>
    <link>https://keithzeng.github.io/series/divide-and-conquer/</link>
    <description>Recent content in Divide and Conquer on k317h</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Jan 2019 01:14:32 -0800</lastBuildDate>
    
	<atom:link href="https://keithzeng.github.io/series/divide-and-conquer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Merge Sort</title>
      <link>https://keithzeng.github.io/posts/merge-sort/</link>
      <pubDate>Tue, 29 Jan 2019 01:14:32 -0800</pubDate>
      
      <guid>https://keithzeng.github.io/posts/merge-sort/</guid>
      <description>Problem Sort the elements
Abstract the behavior:
1. Divide the input into two pieces of equal size O(n) 1. solve the two subproblems on these pieces separately by recursion 1. combine the two results into an overall solution O(n)
Recurrence Time Complexity:
T(n) â‰¤ 2T(n/2) + cn
To analyze the above recurrence relation, check below image.  At level j, we have $2^j$ nodes with size $n/2^j$ Each node takes $cn/2^j$, so level j takes $cn/2^j$ x $2^j = cn$ There are logn levels, so T(n) = O(nlogn)  For more general case</description>
    </item>
    
  </channel>
</rss>